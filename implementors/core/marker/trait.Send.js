(function() {var implementors = {};
implementors["secp256k1"] = [{text:"impl&lt;'buf&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> for <a class=\"struct\" href=\"secp256k1/struct.SignOnlyPreallocated.html\" title=\"struct secp256k1::SignOnlyPreallocated\">SignOnlyPreallocated</a>&lt;'buf&gt;",synthetic:true,types:["secp256k1::context::SignOnlyPreallocated"]},{text:"impl&lt;'buf&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> for <a class=\"struct\" href=\"secp256k1/struct.VerifyOnlyPreallocated.html\" title=\"struct secp256k1::VerifyOnlyPreallocated\">VerifyOnlyPreallocated</a>&lt;'buf&gt;",synthetic:true,types:["secp256k1::context::VerifyOnlyPreallocated"]},{text:"impl&lt;'buf&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> for <a class=\"struct\" href=\"secp256k1/struct.AllPreallocated.html\" title=\"struct secp256k1::AllPreallocated\">AllPreallocated</a>&lt;'buf&gt;",synthetic:true,types:["secp256k1::context::AllPreallocated"]},{text:"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> for <a class=\"struct\" href=\"secp256k1/struct.Signature.html\" title=\"struct secp256k1::Signature\">Signature</a>",synthetic:true,types:["secp256k1::Signature"]},{text:"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> for <a class=\"struct\" href=\"secp256k1/struct.SerializedSignature.html\" title=\"struct secp256k1::SerializedSignature\">SerializedSignature</a>",synthetic:true,types:["secp256k1::SerializedSignature"]},{text:"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> for <a class=\"struct\" href=\"secp256k1/struct.Message.html\" title=\"struct secp256k1::Message\">Message</a>",synthetic:true,types:["secp256k1::Message"]},{text:"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> for <a class=\"enum\" href=\"secp256k1/enum.SignOnly.html\" title=\"enum secp256k1::SignOnly\">SignOnly</a>",synthetic:true,types:["secp256k1::context::std_only::SignOnly"]},{text:"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> for <a class=\"enum\" href=\"secp256k1/enum.VerifyOnly.html\" title=\"enum secp256k1::VerifyOnly\">VerifyOnly</a>",synthetic:true,types:["secp256k1::context::std_only::VerifyOnly"]},{text:"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> for <a class=\"enum\" href=\"secp256k1/enum.All.html\" title=\"enum secp256k1::All\">All</a>",synthetic:true,types:["secp256k1::context::std_only::All"]},{text:"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> for <a class=\"enum\" href=\"secp256k1/enum.Error.html\" title=\"enum secp256k1::Error\">Error</a>",synthetic:true,types:["secp256k1::Error"]},{text:"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> for <a class=\"struct\" href=\"secp256k1/ecdh/struct.SharedSecret.html\" title=\"struct secp256k1::ecdh::SharedSecret\">SharedSecret</a>",synthetic:true,types:["secp256k1::ecdh::SharedSecret"]},{text:"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> for <a class=\"struct\" href=\"secp256k1/ffi/struct.Context.html\" title=\"struct secp256k1::ffi::Context\">Context</a>",synthetic:true,types:["secp256k1::ffi::Context"]},{text:"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> for <a class=\"struct\" href=\"secp256k1/ffi/struct.PublicKey.html\" title=\"struct secp256k1::ffi::PublicKey\">PublicKey</a>",synthetic:true,types:["secp256k1::ffi::PublicKey"]},{text:"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> for <a class=\"struct\" href=\"secp256k1/ffi/struct.Signature.html\" title=\"struct secp256k1::ffi::Signature\">Signature</a>",synthetic:true,types:["secp256k1::ffi::Signature"]},{text:"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> for <a class=\"struct\" href=\"secp256k1/ffi/struct.SharedSecret.html\" title=\"struct secp256k1::ffi::SharedSecret\">SharedSecret</a>",synthetic:true,types:["secp256k1::ffi::SharedSecret"]},{text:"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> for <a class=\"struct\" href=\"secp256k1/key/struct.SecretKey.html\" title=\"struct secp256k1::key::SecretKey\">SecretKey</a>",synthetic:true,types:["secp256k1::key::SecretKey"]},{text:"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> for <a class=\"struct\" href=\"secp256k1/key/struct.PublicKey.html\" title=\"struct secp256k1::key::PublicKey\">PublicKey</a>",synthetic:true,types:["secp256k1::key::PublicKey"]},{text:"impl&lt;C:&nbsp;Context&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> for <a class=\"struct\" href=\"secp256k1/struct.Secp256k1.html\" title=\"struct secp256k1::Secp256k1\">Secp256k1</a>&lt;C&gt;",synthetic:false,types:["secp256k1::Secp256k1"]},];

            if (window.register_implementors) {
                window.register_implementors(implementors);
            } else {
                window.pending_implementors = implementors;
            }
        })()